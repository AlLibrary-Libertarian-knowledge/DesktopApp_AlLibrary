#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üöÄ Running pre-push checks..."

# Get the current branch
current_branch=$(git branch --show-current)

# Prevent pushing to main/master directly
if [ "$current_branch" = "main" ] || [ "$current_branch" = "master" ]; then
    echo "‚ùå Direct push to $current_branch is not allowed!"
    echo "Please create a feature branch and open a pull request."
    exit 1
fi

# Run full test suite
echo "üß™ Running full test suite..."
yarn test --run

# Build check to ensure everything compiles
echo "üî® Running build check..."
yarn build

# Final security audit
echo "üîí Running comprehensive security audit..."
# Run audit and capture output
audit_result=$(yarn audit 2>&1)
echo "$audit_result"

# Check if there are any high or critical vulnerabilities
if echo "$audit_result" | grep -E "(High|Critical)" > /dev/null; then
    echo "‚ùå High or critical security vulnerabilities found!"
    echo "Please run 'yarn audit' and 'yarn audit fix' to resolve them."
    exit 1
else
    echo "‚úÖ No high or critical vulnerabilities found - proceeding..."
fi

# Check for TODO/FIXME comments in staged files
echo "üìù Checking for TODO/FIXME comments..."
todos=$(git diff --cached --name-only | xargs grep -l "TODO\|FIXME" 2>/dev/null || true)
if [ -n "$todos" ]; then
    echo "‚ö†Ô∏è  Found TODO/FIXME comments in staged files:"
    echo "$todos"
    echo "Consider addressing these before pushing."
    read -p "Continue anyway? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

echo "‚úÖ Pre-push checks completed successfully!" 